{
  "总计API数量": 310,
  "成功爬取": 310,
  "失败页面数": 0,
  "APIs": [
    {
      "API名称": "基础API",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0003.html",
      "功能说明": "Ascend C提供一组类库API，开发者使用标准C语法和类库API进行编程。Ascend C编程类库API示意图如下所示，分为：",
      "函数原型": "",
      "参数说明": [
        {
          "参数名": "SetAtomicAdd",
          "类型": "设置接下来从VECOUT到GM，L0C到GM，L1到GM的数据传输是否进行原子累加，可根据参数不同设定不同的累加数据类型。",
          "说明": ""
        },
        {
          "参数名": "SetAtomicType",
          "类型": "通过设置模板参数来设定原子操作不同的数据类型。",
          "说明": ""
        },
        {
          "参数名": "SetAtomicNone",
          "类型": "原子操作函数，清空原子操作的状态。",
          "说明": ""
        }
      ],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Tan",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0532.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持接口框架申请和开发者通过sharedTmpBuffer入参传入两种方式。",
      "函数原型": "__aicore__ inline void Tan(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void Tan(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)"
    },
    {
      "API名称": "WholeReduceMin-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0080.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "TPipe构造函数-TPipe-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0108.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GET_TILING_DATA-Kernel Tiling-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0214.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LayerNorm-LayerNorm-数据归一化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0796.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "AddReluCast-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0044.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Atan-Atan-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0516.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Exp-Exp-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0589.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetBlockNum-系统变量访问-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0184.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ClampMax",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0576.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void ClampMax(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const T scalar, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void ClampMax(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const T scalar, const uint32_t calCount)"
    },
    {
      "API名称": "ResetMask-掩码操作-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0097.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "WaitPreBlock-核间同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0207.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SoftMax-SoftMax-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0754.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "IBSet",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0202.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void IBSet(const GlobalTensorint32_t gmWorkspace, const LocalTensorint32_t ubWorkspace, int32_t blockIdx, int32_t eventID)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template bool isAIVOnly  true __aicore__ inline void IBSet(const GlobalTensorint32_t gmWorkspace, const LocalTensorint32_t ubWorkspace, int32_t blockIdx, int32_t eventID)"
    },
    {
      "API名称": "GetCmpMask(ISASI)-比较指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0223.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "MrgSort4-排序组合(ISASI)-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0230.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "TILING_KEY_IS-Kernel Tiling-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0217.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetMaskNorm-掩码操作-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0095.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetHF32Mode",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0258.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void SetHF32Mode(bool hf32Mode)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline void SetHF32Mode(bool hf32Mode)"
    },
    {
      "API名称": "Input-OpDef-原型注册与管理-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0946.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SoftmaxFlash-SoftMax-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0756.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Fmod-Fmod-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0608.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Or-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0042.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "PairReduceSum-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0085.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LoadData",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0238.html",
      "功能说明": "",
      "函数原型": "void LoadData(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LoadData2DParams loadDataParams)",
      "参数说明": [
        {
          "参数名": "Std",
          "类型": "",
          "说明": ":enable_ifStd::is_samePrimTT, U::value, bool::type  true __aicore__ inline void LoadData(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LoadData3DParamsV1U loadDataParams)"
        },
        {
          "参数名": "Std",
          "类型": "",
          "说明": ":enable_ifStd::is_samePrimTT, U::value, bool::type  true __aicore__ inline void LoadData(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LoadData3DParamsV2U loadDataParams)"
        }
      ],
      "返回值": "无",
      "调用示例": "template typename T void LoadData(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LoadData2DParams loadDataParams) template typename T void LoadData(const LocalTensorT dstLocal, const GlobalTensorT srcLocal, const LoadData2DParams loadDataParams)"
    },
    {
      "API名称": "SetNextTaskStart-任务间同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_00087.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "is_same-type_traits-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10116.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Erfc-Erfc-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0548.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "FusedMulAddRelu-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0051.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetFixpipePreQuantFlag(ISASI)-数据搬运-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0254.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ToBfloat16-标量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0021.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetAccVal(ISASI)-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0225.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetFixPipeAddr(ISASI)-数据搬运-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0256.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "DropOut-数据过滤-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0862.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetTiling",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0978.html",
      "功能说明": "",
      "函数原型": "OpAICoreDef SetTiling(gert::OpImplRegisterV2::TilingKernelFunc func)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "OpAICoreDef SetTiling(gert::OpImplRegisterV2::TilingKernelFunc func)"
    },
    {
      "API名称": "构造函数与析构函数-KfcWorkspace-资源管理(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0307.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Power",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0520.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持接口框架申请和开发者通过sharedTmpBuffer入参传入两种方式。",
      "函数原型": "__aicore__ inline void Power(const LocalTensorT dstTensor, const LocalTensorT src0Tensor, const LocalTensorT src1Tensor, const LocalTensoruint8_t sharedTmpBuffer, uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void Power(const LocalTensorT dstTensor, const LocalTensorT src0Tensor, const LocalTensorT src1Tensor, const LocalTensoruint8_t sharedTmpBuffer, uint32_t calCount)"
    },
    {
      "API名称": "TopK-排序-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0836.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Mul-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0037.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ShiftLeft-标量双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0058.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LoadDataUnzip-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0243.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "max-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10053.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "简介-OpMC2Def-原型注册与管理-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0999.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "AddRelu",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0043.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void AddRelu(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void AddRelu(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)"
    },
    {
      "API名称": "Not",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0031.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Not(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Not(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const int32_t calCount)"
    },
    {
      "API名称": "assert-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0194.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Reciprocal",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0028.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Reciprocal(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Reciprocal(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const int32_t calCount)"
    },
    {
      "API名称": "ReduceProd-ReduceProd-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10150.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetMMLayoutTransform",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0260.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void SetMMLayoutTransform(bool mmLayoutMode)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline void SetMMLayoutTransform(bool mmLayoutMode)"
    },
    {
      "API名称": "ParamStruct",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_00011.html",
      "功能说明": "",
      "函数原型": "name(inName), paramType(inParamType), bitWidth(inBitWidth), vals(std::move(inVals)),",
      "参数说明": [],
      "返回值": "无",
      "调用示例": " ParamStruct是存放用户设置的模板参数ASCENDC_TPL_ARGS_DECL和模板参数组合ASCENDC_TPL_ARGS_SEL的结构体，用作后续的Tilingkey与模板参数之间的编解码，用户无需关注 struct ParamStruct  const char name; uint32_t paramType; uint8_t bitWidth; std::vectoruint64_t vals; const char macroType; ParamStruct(const char inName, uint32_t inParamType, uint8_t inBitWidth, std::vectoruint64_t inVals, const char inMacroType): name(inName), paramType(inParamType), bitWidth(inBitWidth), vals(std::move(inVals)), macroType(inMacroType)  ; using TilingDeclareParams  std::vectorParamStruct; using TilingSelectParams  std::vectorstd::vectorParamStruct;  模板参数定义相关接口 define ASCENDC_TPL_DTYPE_DECL(x, ...) ParamStructx, ASCENDC_TPL_DTYPE, ASCENDC_TPL_8_BW, __VA_ARGS__, DECL define ASCENDC_TPL_FORMAT_DECL(x, ...) ParamStructx, ASCENDC_TPL_FORMAT, ASCENDC_TPL_8_BW, __VA_ARGS__, DECL define ASCENDC_TPL_UINT_DECL(x, bw, ...) ParamStructx, ASCENDC_TPL_UINT, bw, __VA_ARGS__, DECL define ASCENDC_TPL_BOOL_DECL(x, ...) ParamStructx, ASCENDC_TPL_BOOL, ASCENDC_TPL_1_BW, __VA_ARGS__, DECL define ASCENDC_TPL_DTYPE_SEL(x, ...) ParamStructx, ASCENDC_TPL_DTYPE, ASCENDC_TPL_8_BW, __VA_ARGS__, SEL define ASCENDC_TPL_FORMAT_SEL(x, ...) ParamStructx, ASCENDC_TPL_FORMAT, ASCENDC_TPL_8_BW, __VA_ARGS__, SEL define ASCENDC_TPL_UINT_SEL(x, ...) ParamStructx, ASCENDC_TPL_UINT, 0, __VA_ARGS__, SEL define ASCENDC_TPL_BOOL_SEL(x, ...) ParamStructx, ASCENDC_TPL_BOOL, ASCENDC_TPL_1_BW, __VA_ARGS__, SEL define ASCENDC_TPL_ARGS_DECL(x, ...) static TilingDeclareParams g_tilingDeclareParams __VA_ARGS__  define ASCENDC_TPL_ARGS_SEL(...)  __VA_ARGS__ define ASCENDC_TPL_SEL(...) static TilingSelectParams g_tilingSelectParams __VA_ARGS__ "
    },
    {
      "API名称": "Cast-基础核函数接口-单算子API执行相关接口-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1193.html",
      "功能说明": "将输入tensor转换为指定的数据类型。",
      "函数原型": "auto uniqueExecutor  CREATE_EXECUTOR();",
      "参数说明": [
        {
          "参数名": "self",
          "类型": "输入",
          "说明": "待转换的输入tensor，数据类型支持FLOAT16FLOATDOUBLEBFLOAT16INT8UINT8INT16UINT16INT32UINT32INT64UINT64BOOLCOMPLEX64COMPLEX128。数据格式支持ND。 说明： BFLOAT16适用于如下产品型号： Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 Atlas A3 训练系列产品Atlas A3 推理系列产品"
        },
        {
          "参数名": "dstDtype",
          "类型": "输入",
          "说明": "转换后的目标dtype，数据类型支持FLOAT16FLOATDOUBLEBFLOAT16INT8UINT8INT16UINT16INT32UINT32INT64UINT64BOOLCOMPLEX64COMPLEX128。 说明： BFLOAT16适用于如下产品型号： Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 Atlas A3 训练系列产品Atlas A3 推理系列产品"
        },
        {
          "参数名": "executor",
          "类型": "输入",
          "说明": "op执行器，包含了算子计算流程。"
        }
      ],
      "返回值": "返回类型为dstDtype的tensor。",
      "调用示例": "1 2 3 4 5 6 7 8 9"
    },
    {
      "API名称": "SetFmatrix-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0245.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ScalarCast",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0018.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline dstT ScalarCast(srcT valueIn)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename srcT, typename dstT, RoundMode roundMode __aicore__ inline dstT ScalarCast(srcT valueIn)"
    },
    {
      "API名称": "Input-OpAICoreConfig-原型注册与管理-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0988.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ReduceMax-ReduceMax-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10055.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "InitGlobalMemory-工具类-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0891.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "RmsNorm-数据归一化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0804.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ADD_TO_LAUNCHER_LIST_AICORE-常用宏和类-框架能力接口-单算子API执行相关接口-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1043.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Axpy-Axpy-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0585.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "BlockReduceMin-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0083.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "BilinearInterpolation",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0222.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void BilinearInterpolation(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensoruint32_t src0OffsetLocal, const LocalTensorT src1Local, uint64_t mask, uint8_t hRepeat, bool repeatMode, uint16_t dstBlkStride, uint16_t vROffset, uint8_t vRepeat, const LocalTensoruint8_t sharedTmpBuffer)",
      "参数说明": [
        {
          "参数名": "mask逐bit模式",
          "类型": "",
          "说明": "1 2 template typename T __aicore__ inline void BilinearInterpolation(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensoruint32_t src0OffsetLocal, const LocalTensorT src1Local, uint64_t mask, uint8_t hRepeat, bool repeatMode, uint16_t dstBlkStride, uint16_t vROffset, uint8_t vRepeat, const LocalTensoruint8_t sharedTmpBuffer)"
        },
        {
          "参数名": "mask连续模式",
          "类型": "",
          "说明": "1 2 template typename T __aicore__ inline void BilinearInterpolation(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensoruint32_t src0OffsetLocal, const LocalTensorT src1Local, uint64_t mask, uint8_t hRepeat, bool repeatMode, uint16_t dstBlkStride, uint16_t vROffset, uint8_t vRepeat, const LocalTensoruint8_t sharedTmpBuffer)"
        }
      ],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void BilinearInterpolation(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensoruint32_t src0OffsetLocal, const LocalTensorT src1Local, uint64_t mask, uint8_t hRepeat, bool repeatMode, uint16_t dstBlkStride, uint16_t vROffset, uint8_t vRepeat, const LocalTensoruint8_t sharedTmpBuffer)"
    },
    {
      "API名称": "VectorPadding",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0221.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void VectorPadding(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const uint8_t padMode, const bool padSide, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void VectorPadding(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const uint8_t padMode, const bool padSide, const uint32_t calCount)"
    },
    {
      "API名称": "SetFixPipeClipRelu",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0255.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void SetFixPipeClipRelu(uint64_t config)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline void SetFixPipeClipRelu(uint64_t config)"
    },
    {
      "API名称": "BEGIN_TILING_DATA_DEF",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1005.html",
      "功能说明": "",
      "函数原型": "BEGIN_TILING_DATA_DEF(class_name)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "BEGIN_TILING_DATA_DEF(class_name)"
    },
    {
      "API名称": "DumpTensor",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0192.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void DumpTensor(const LocalTensorT tensor, uint32_t desc, uint32_t dumpSize)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void DumpTensor(const LocalTensorT tensor, uint32_t desc, uint32_t dumpSize) template typename T __aicore__ inline void DumpTensor(const GlobalTensorT tensor, uint32_t desc, uint32_t dumpSize)"
    },
    {
      "API名称": "Atanh-Atanh-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0556.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SoftmaxFlashV3",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10001.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持接口框架申请和开发者通过sharedTmpBuffer入参传入两种方式。",
      "函数原型": "__aicore__ inline void SoftmaxFlashV3(const LocalTensorT dstTensor, const LocalTensorU meanTensor, const LocalTensorU expSumTensor, const LocalTensorU maxTensor, const LocalTensorT srcTensor, const LocalTensorT expMaxTensor, const LocalTensorU inMeanTensor, const LocalTensorU inExpSumTensor, const LocalTensorU inMaxTensor, const SoftMaxTiling tiling, const SoftMaxParams params)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, typename U, bool isUpdate  false, bool isReuseSource  false, bool isBasicBlock  false, bool isDataFormatNZ  false, const SoftmaxConfig config  SOFTMAX_DEFAULT_CFG __aicore__ inline void SoftmaxFlashV3(const LocalTensorT dstTensor, const LocalTensorU meanTensor, const LocalTensorU expSumTensor, const LocalTensorU maxTensor, const LocalTensorT srcTensor, const LocalTensorT expMaxTensor, const LocalTensorU inMeanTensor, const LocalTensorU inExpSumTensor, const LocalTensorU inMaxTensor, const SoftMaxTiling tiling, const SoftMaxParams params)"
    },
    {
      "API名称": "简介-TQue-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0136.html",
      "功能说明": "流水任务之间通过队列Queue完成任务间通信和同步。TQue是用来执行队列相关操作管理相关资源的数据结构。TQue继承自TQueBind父类，继承关系如下：",
      "函数原型": "a1  que.AllocTensor();",
      "参数说明": [
        {
          "参数名": "pos",
          "类型": "队列逻辑位置，可以为VECINVECOUTA1A2B1B2CO1CO2。关于TPosition的具体介绍请参考TPosition。",
          "说明": ""
        },
        {
          "参数名": "depth",
          "类型": "队列的深度表示该队列可以连续进行入队出队的次数，在代码运行时，对同一个队列有n次连续的EnQue中间没有DeQue，那么该队列的深度就需要设置为n。 注意，这里的队列深度和double buffer无关，队列机制用于实现流水线并行，double buffer在此基础上进一步提高流水线的利用率。即使队列的深度为1，仍可以开启double buffer。 非Tensor原地操作的场景下，队列的深度设置为1时，编译器对这种场景做了特殊优化，性能通常更好，推荐设置为1。 Tensor原地操作的场景下，需要设置为0。 如下样例中队列没有连续入队，队列的深度设置为1。 1 2 3 4 a1  que.AllocTensor(); que.EnQue(a1); a1  que.DeQue(); que.FreeTensor(a1); 如下样例中队列连续2次入队，队列的深度应设置为2，仅在极少数preload场景比如连续搬入两份数据，计算处理一份，完成后再搬入一份，然后计算处理提前搬入的一份...可能会使用。其他情况下均不推荐depth  2 。 1 2 3 4 5 6 7 8 a1  que.AllocTensor(); a2  que.AllocTensor(); que.EnQue(a1); que.EnQue(a2); a1  que.DeQue(); a2  que.DeQue(); que.FreeTensor(a1); que.FreeTensor(a2);",
          "说明": "1 2 3 4"
        },
        {
          "参数名": "1 2 3 4",
          "类型": "a1  que.AllocTensor(); que.EnQue(a1); a1  que.DeQue(); que.FreeTensor(a1);",
          "说明": ""
        },
        {
          "参数名": "1 2 3 4 5 6 7 8",
          "类型": "a1  que.AllocTensor(); a2  que.AllocTensor(); que.EnQue(a1); que.EnQue(a2); a1  que.DeQue(); a2  que.DeQue(); que.FreeTensor(a1); que.FreeTensor(a2);",
          "说明": ""
        },
        {
          "参数名": "mask",
          "类型": "mask是int类型时，采用比特位表达信息： bit 0位为1表示，数据格式从ND转换为NZ，TPosition仅支持A1或B1； bit 1位为1表示，数据格式从NZ转换为ND，TPosition仅支持CO2。 支持的型号如下： Atlas 推理系列产品 AI Core mask是const TQueConfig类型时，TQueConfig结构定义和参数说明如下，调用示例见调用示例: 1 2 3 4 5 6 7 8 9 10 11 struct TQueConfig  bool nd2nz  false;  true代表数据格式从ND转换为NZ，仅支持TPosition为A1或B1，默认为false bool nz2nd  false;  true代表数据格式从NZ转换为ND，仅支持TPosition为CO2，默认为false bool scmBlockGroup  false;  TSCM相关参数，预留参数，默认为false uint32_t bufferLen  0;  与InitBuffer时输入的len参数保持一致，可以在编译期做性能优化，传0表示在InitBuffer时做资源分配。 uint32_t bufferNumber  0;  与InitBuffer时输入的num参数保持一致，可以在编译期做性能优化，传0表示在InitBuffer时做资源分配。 uint32_t consumerSize  0;  预留参数 TPosition consumer8  ;  预留参数 bool enableStaticEvtId  false;  预留参数 bool enableLoopQueue  false;  预留参数 ; 上述NDNZ格式转换相关参数支持的型号如下： Atlas 推理系列产品 AI Core",
          "说明": "1 2 3 4 5 6 7 8 9 10 11"
        },
        {
          "参数名": "1 2 3 4 5 6 7 8 9 10 11",
          "类型": "struct TQueConfig  bool nd2nz  false;  true代表数据格式从ND转换为NZ，仅支持TPosition为A1或B1，默认为false bool nz2nd  false;  true代表数据格式从NZ转换为ND，仅支持TPosition为CO2，默认为false bool scmBlockGroup  false;  TSCM相关参数，预留参数，默认为false uint32_t bufferLen  0;  与InitBuffer时输入的len参数保持一致，可以在编译期做性能优化，传0表示在InitBuffer时做资源分配。 uint32_t bufferNumber  0;  与InitBuffer时输入的num参数保持一致，可以在编译期做性能优化，传0表示在InitBuffer时做资源分配。 uint32_t consumerSize  0;  预留参数 TPosition consumer8  ;  预留参数 bool enableStaticEvtId  false;  预留参数 bool enableLoopQueue  false;  预留参数 ;",
          "说明": ""
        }
      ],
      "返回值": "",
      "调用示例": "1 2 3 4 5 6 7 8 9 10 11"
    },
    {
      "API名称": "ReduceMax-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0076.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "tuple-容器函数-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10108.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetMrgSortResult-排序组合(ISASI)-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0233.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ReadSpmBuffer-SPM Buffer-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0168.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "使用说明-Hccl-Hccl-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0868.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "REGISTER_TILING_DATA_CLASS",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1006.html",
      "功能说明": "",
      "函数原型": "op_typeclass_nameHelper() ",
      "参数说明": [],
      "返回值": "std ::",
      "调用示例": "define REGISTER_TILING_DATA_CLASS(op_type, class_name) class op_typeclass_nameHelper  public: op_typeclass_nameHelper()  CTilingDataClassFactory::RegisterTilingData(op_type, op_typeclass_nameHelper::CreateTilingDataInstance);  static std::shared_ptrTilingDef CreateTilingDataInstance()  return std::make_sharedclass_name();  ; op_typeclass_nameHelper g_tilingdata_op_typeclass_namehelper;"
    },
    {
      "API名称": "LoadImageToLocal-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0241.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "index_sequence-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10106.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ReGlu-ReGlu-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0790.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetAtomicAdd-原子操作-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0210.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "InitDetermineComputeWorkspace",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0206.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void InitDetermineComputeWorkspace(GlobalTensorint32_t gmWorkspace, LocalTensorint32_t ubWorkspace)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline void InitDetermineComputeWorkspace(GlobalTensorint32_t gmWorkspace, LocalTensorint32_t ubWorkspace)"
    },
    {
      "API名称": "SetLoadDataRepeat-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0247.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "DataCopy",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0105.html",
      "功能说明": "该原型接口支持的数据通路和数据类型如下所示：",
      "函数原型": "__aicore__ inline void DataCopy(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const Nd2NzParams intriParams);",
      "参数说明": [
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表1 数据通路和数据类型源操作数为GlobalTensor，目的操作数为LocalTensor支持型号 数据通路 源操作数和目的操作数的数据类型 (两者保持一致) Atlas 推理系列产品AI Core GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  float Atlas 推理系列产品AI Core GM - A1  B1 int16_t  uint16_t  int32_t  uint32_t  half  float Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 GM - A1  B1 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A3 训练系列产品Atlas A3 推理系列产品 GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A3 训练系列产品Atlas A3 推理系列产品 GM - A1  B1 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float 注意：针对耦合架构，使用该接口时需要预留8K的Unified Buffer空间，作为接口的临时数据存放区。"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表2 数据通路和数据类型源操作数为LocalTensor，目的操作数为GlobalTensor支持型号 数据通路 源操作数和目的操作数的数据类型 (两者保持一致) Atlas 推理系列产品AI Core VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  float Atlas 推理系列产品AI Core CO2 - GM int16_t  uint16_t  int32_t  uint32_t  half  float Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A3 训练系列产品Atlas A3 推理系列产品 VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float 可以通过参数控制使能NZ2ND功能，同时包含量化relu等功能1 2 3 可以通过参数控制使能NZ2ND功能，同时包含量化relu等功能 template typename T, typename U __aicore__ inline void DataCopy(const GlobalTensorT dstGlobal, const LocalTensorU srcLocal, const DataCopyCO12DstParams intriParams); 该原型接口支持的数据通路和数据类型如下所示： 表3 数据通路和数据类型源操作数为LocalTensor，目的操作数为GlobalTensor支持型号 数据通路 源操作数的数据类型 目的操作数的数据类型 Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t Atlas 200I500 A2 推理产品 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas 200I500 A2 推理产品 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表2 数据通路和数据类型源操作数为LocalTensor，目的操作数为GlobalTensor支持型号 数据通路 源操作数和目的操作数的数据类型 (两者保持一致) Atlas 推理系列产品AI Core VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  float Atlas 推理系列产品AI Core CO2 - GM int16_t  uint16_t  int32_t  uint32_t  half  float Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A3 训练系列产品Atlas A3 推理系列产品 VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表3 数据通路和数据类型源操作数为LocalTensor，目的操作数为GlobalTensor支持型号 数据通路 源操作数的数据类型 目的操作数的数据类型 Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t Atlas 200I500 A2 推理产品 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas 200I500 A2 推理产品 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表4 数据通路和数据类型源操作数为LocalTensor，目的操作数为LocalTensor支持型号 数据通路 源操作数和目的操作数的数据类型 (两者保持一致) Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECIN  VECCALC  VECOUT - TSCM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A3 训练系列产品Atlas A3 推理系列产品 VECIN  VECCALC  VECOUT - TSCM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float 包含量化relu等功能1 2template typename T, typename U __aicore__ inline void DataCopy(const LocalTensorT dstLocal, const LocalTensorU srcLocal, const DataCopyCO12DstParams intriParams); 该原型接口支持的数据通路和数据类型如下所示： 表5 数据通路和数据类型源操作数为LocalTensor，目的操作数为LocalTensor支持型号 数据通路 源操作数的数据类型 目的操作数的数据类型 Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - A1 float uint8_tint8_thalfbfloat16_t Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - A1 int32_t uint8_tint8_thalfint16_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - A1 float uint8_tint8_thalfbfloat16_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - A1 int32_t uint8_tint8_thalfint16_t"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表4 数据通路和数据类型源操作数为LocalTensor，目的操作数为LocalTensor支持型号 数据通路 源操作数和目的操作数的数据类型 (两者保持一致) Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECIN  VECCALC  VECOUT - TSCM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A3 训练系列产品Atlas A3 推理系列产品 VECIN  VECCALC  VECOUT - TSCM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表5 数据通路和数据类型源操作数为LocalTensor，目的操作数为LocalTensor支持型号 数据通路 源操作数的数据类型 目的操作数的数据类型 Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - A1 float uint8_tint8_thalfbfloat16_t Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - A1 int32_t uint8_tint8_thalfint16_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - A1 float uint8_tint8_thalfbfloat16_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - A1 int32_t uint8_tint8_thalfint16_t"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表2 数据通路和数据类型源操作数为LocalTensor，目的操作数为GlobalTensor支持型号 数据通路 源操作数和目的操作数的数据类型 (两者保持一致) Atlas 推理系列产品AI Core VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  float Atlas 推理系列产品AI Core CO2 - GM int16_t  uint16_t  int32_t  uint32_t  half  float Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A3 训练系列产品Atlas A3 推理系列产品 VECOUT - GM int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表3 数据通路和数据类型源操作数为LocalTensor，目的操作数为GlobalTensor支持型号 数据通路 源操作数的数据类型 目的操作数的数据类型 Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t Atlas 200I500 A2 推理产品 CO1 - GM float uint8_tint8_thalfbfloat16_tfloat Atlas 200I500 A2 推理产品 CO1 - GM int32_t uint8_tint8_thalfint16_tint32_t"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表4 数据通路和数据类型源操作数为LocalTensor，目的操作数为LocalTensor支持型号 数据通路 源操作数和目的操作数的数据类型 (两者保持一致) Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECIN  VECCALC  VECOUT - TSCM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float Atlas A3 训练系列产品Atlas A3 推理系列产品 VECIN  VECCALC  VECOUT - TSCM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  half  bfloat16_t  float"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表5 数据通路和数据类型源操作数为LocalTensor，目的操作数为LocalTensor支持型号 数据通路 源操作数的数据类型 目的操作数的数据类型 Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - A1 float uint8_tint8_thalfbfloat16_t Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 CO1 - A1 int32_t uint8_tint8_thalfint16_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - A1 float uint8_tint8_thalfbfloat16_t Atlas A3 训练系列产品Atlas A3 推理系列产品 CO1 - A1 int32_t uint8_tint8_thalfint16_t"
        }
      ],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void DataCopy(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const Nd2NzParams intriParams);"
    },
    {
      "API名称": "SubRelu",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0046.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void SubRelu(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void SubRelu(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)"
    },
    {
      "API名称": "Copy",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0106.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Copy(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const uint64_t mask, const uint8_t repeatTimes, const CopyRepeatParams repeatParams)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isSetMask  true __aicore__ inline void Copy(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const uint64_t mask, const uint8_t repeatTimes, const CopyRepeatParams repeatParams)"
    },
    {
      "API名称": "CountBitsCntSameAsSignBit",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0019.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline int64_t CountBitsCntSameAsSignBit(int64_t valueIn)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline int64_t CountBitsCntSameAsSignBit(int64_t valueIn)"
    },
    {
      "API名称": "Silu",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0780.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Silu(const LocalTensorT dstLocal, const LocalTensorT srcLocal, uint32_t dataSize)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void Silu(const LocalTensorT dstLocal, const LocalTensorT srcLocal, uint32_t dataSize)"
    },
    {
      "API名称": "Div",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0038.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Div(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Div(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)"
    },
    {
      "API名称": "SoftmaxFlashV2-SoftMax-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0758.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Gemm-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0263.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "AddDeqRelu-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0045.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "使用说明-CubeResGroupHandle-资源管理(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0289.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SubReluCast-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0047.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetHF32TransMode",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0259.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void SetHF32TransMode(bool hf32TransMode)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline void SetHF32TransMode(bool hf32TransMode)"
    },
    {
      "API名称": "LoadUnzipIndex-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0242.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Adds-标量双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0054.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "CreateVecIndex-数据填充-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0090.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Gather",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0092.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Gather(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LocalTensoruint32_t srcOffsetLocal, const uint32_t srcBaseAddr, const uint32_t count)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Gather(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LocalTensoruint32_t srcOffsetLocal, const uint32_t srcBaseAddr, const uint32_t count)"
    },
    {
      "API名称": "Exp",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0025.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Exp(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Exp(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const int32_t calCount)"
    },
    {
      "API名称": "Mmad",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0249.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Mmad(const LocalTensorDstT dstLocal, const LocalTensorSrc0T fmLocal, const LocalTensorSrc1T filterLocal, const MmadParams mmadParams)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename DstT, typename Src0T, typename Src1T __aicore__ inline void Mmad(const LocalTensorDstT dstLocal, const LocalTensorSrc0T fmLocal, const LocalTensorSrc1T filterLocal, const MmadParams mmadParams)"
    },
    {
      "API名称": "Erf-Erf-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0544.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SoftmaxGrad-SoftMax-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0757.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Swish",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0783.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Swish(const LocalTensorT dstLocal, const LocalTensorT srcLocal, uint32_t dataSize, const T scalarValue)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void Swish(const LocalTensorT dstLocal, const LocalTensorT srcLocal, uint32_t dataSize, const T scalarValue)"
    },
    {
      "API名称": "SetStoreAtomicConfig(ISASI)-原子操作-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0286.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GeGLU-GeGLU-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0786.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "AnchorInstanceInfo",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/basicdataapi/atlasopapi_07_00002.html",
      "功能说明": "",
      "函数原型": "AnchorInstanceInfo()",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "AnchorInstanceInfo() AnchorInstanceInfo(const uint32_t instance_start, const uint32_t instantiation_num) size_t GetInstanceNum() const size_t GetInstanceStart() const void SetInstanceStart(const uint32_t instance_start) void SetInstantiationNum(const uint32_t instantiation_num)"
    },
    {
      "API名称": "MetricsProfStop-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1215.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetFixPipeConfig",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0252.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void SetFixPipeConfig(const LocalTensorT reluPre, const LocalTensorT quantPre, bool isUnitFlag  false)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void SetFixPipeConfig(const LocalTensorT reluPre, const LocalTensorT quantPre, bool isUnitFlag  false) template typename T, bool setRelu  false __aicore__ inline void SetFixPipeConfig(const LocalTensorT preTensor, bool isUnitFlag  false)"
    },
    {
      "API名称": "SetAtomicType-原子操作-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0211.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "简介-TilingContext-gert命名空间-基础数据结构和接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/basicdataapi/atlasopapi_07_00223.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Trunc-Trunc-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0536.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Sinh-Sinh-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0524.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SoftmaxGradFront-SoftMax-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0759.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LoadDataWithSparse-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0244.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ScalarCountLeadingZero-标量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0017.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ConfusionTranspose-变形-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0865.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetVectorMask-掩码操作-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0096.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "DataCopy",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0101.html",
      "功能说明": "该原型接口支持的数据通路和数据类型如下所示：",
      "函数原型": "__aicore__ inline void DataCopy(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const uint32_t calCount)",
      "参数说明": [
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表1 数据通路和数据类型源操作数为GlobalTensor，目的操作数为LocalTensor支持型号 数据通路通过TPosition表达 源操作数和目的操作数的数据类型 (两者保持一致) Atlas 训练系列产品 GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 训练系列产品 GM - A1  B1 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 推理系列产品AI Core GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 推理系列产品AI Core GM - A1  B1 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 推理系列产品Vector Core GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 GM - A1  B1  C1 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A3 训练系列产品Atlas A3 推理系列产品 GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A3 训练系列产品Atlas A3 推理系列产品 GM - A1  B1  C1 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas 200I500 A2 推理产品 GM - VECIN int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表2 数据通路和数据类型源操作数和目的操作数都为LocalTensor支持型号 数据通路通过TPosition表达 源操作数和目的操作数的数据类型 (两者保持一致) Atlas 训练系列产品 VECIN - VECCALC，VECCALC-VECOUT int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 推理系列产品AI Core VECIN - VECCALC，VECCALC-VECOUT int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 推理系列产品AI Core VECINVECCALCVECOUT - A1B1 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECIN - VECCALC，VECCALC-VECOUT int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECINVECCALCVECOUT - TSCM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 C1 - C2 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 A1B1C1-C2PIPE2GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A3 训练系列产品Atlas A3 推理系列产品 VECIN - VECCALC，VECCALC-VECOUT int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A3 训练系列产品Atlas A3 推理系列产品 VECINVECCALCVECOUT - TSCM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A3 训练系列产品Atlas A3 推理系列产品 C1 - C2 int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A3 训练系列产品Atlas A3 推理系列产品 A1B1C1-C2PIPE2GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表3 数据通路和数据类型源操作数为LocalTensor，目的操作数为GlobalTensor支持型号 数据通路通过TPosition表达 源操作数和目的操作数的数据类型 (两者保持一致) Atlas 训练系列产品 VECOUT - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 推理系列产品AI Core VECOUT - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 推理系列产品AI Core CO2 - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas 推理系列产品Vector Core VECOUT - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  float  double Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 VECOUT - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 A1B1 - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A3 训练系列产品Atlas A3 推理系列产品 VECOUT - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas A3 训练系列产品Atlas A3 推理系列产品 A1B1 - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double Atlas 200I500 A2 推理产品 VECOUT - GM int8_t  uint8_t  int16_t  uint16_t  int32_t  uint32_t  int64_t  uint64_t  half  bfloat16_t  float  double"
        },
        {
          "参数名": "该原型接口支持的数据通路和数据类型如下所示",
          "类型": "",
          "说明": "表4 数据通路和数据类型源操作数和目的操作数都为LocalTensor，支持源操作数和目的操作数类型不一致支持型号 数据通路通过TPosition表达 源操作数数据类型 目的操作数数据类型 Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 C1 - C2 half float Atlas A3 训练系列产品Atlas A3 推理系列产品 C1 - C2 half float"
        }
      ],
      "返回值": "无",
      "调用示例": " 支持连续 template typename T __aicore__ inline void DataCopy(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const uint32_t calCount)  支持连续和不连续 template typename T __aicore__ inline void DataCopy(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyParams repeatParams)"
    },
    {
      "API名称": "SelectWithBytesMask",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0859.html",
      "功能说明": "该接口需要额外的临时空间来存储计算过程中的中间变量。临时空间需要开发者申请并通过sharedTmpBuffer入参传入。临时空间大小BufferSize的获取方式如下：通过GetSelectWithBytesMaskMaxMinTmpSize中提供的接口获取需要预留空间范围的大小。",
      "函数原型": "__aicore__ inline void SelectWithBytesMask(const LocalTensorT dst, const LocalTensorT src0, T src1, const LocalTensorU mask, const LocalTensoruint8_t sharedTmpBuffer, const SelectWithBytesMaskShapeInfo info)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, typename U, bool isReuseMask  true __aicore__ inline void SelectWithBytesMask(const LocalTensorT dst, const LocalTensorT src0, T src1, const LocalTensorU mask, const LocalTensoruint8_t sharedTmpBuffer, const SelectWithBytesMaskShapeInfo info)"
    },
    {
      "API名称": "Rsqrt-单目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0030.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "使用说明-Conv3D-Conv3D-卷积正向-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10005.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Sigmoid-Sigmoid-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0793.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "WelfordFinalize-数据归一化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0814.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Xor-Xor-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0601.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetAippFunctions-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0240.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "WaitPreTaskEnd-任务间同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_00088.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "And",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0041.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void And(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void And(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)"
    },
    {
      "API名称": "Maxs-标量双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0056.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetAtomicMax(ISASI)-原子操作-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0284.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "RpSort16-排序组合(ISASI)-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0229.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "InitConstValue",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0237.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void InitConstValue(const LocalTensorT dstLocal, const InitConstValueParamsU initConstValueParams)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, typename U  PrimTT, typename Std::enable_ifStd::is_samePrimTT, U::value, bool::type  true __aicore__ inline void InitConstValue(const LocalTensorT dstLocal, const InitConstValueParamsU initConstValueParams)"
    },
    {
      "API名称": "enable_if-type_traits-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10117.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Gatherb",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0234.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Gatherb(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensoruint32_t offsetLocal, const uint8_t repeatTimes, const GatherRepeatParams repeatParams)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Gatherb(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensoruint32_t offsetLocal, const uint8_t repeatTimes, const GatherRepeatParams repeatParams)"
    },
    {
      "API名称": "原型注册接口OP_ADD-原型注册与管理-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0945.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ReduceMin",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0077.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void ReduceMin(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LocalTensorT workLocal, const int32_t count, bool calIndex  0)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void ReduceMin(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LocalTensorT workLocal, const int32_t count, bool calIndex  0)"
    },
    {
      "API名称": "WholeReduceMax-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0079.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "设置kernel类型-Kernel Tiling-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0218.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Cast",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0073.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Cast(const LocalTensorT1 dstLocal, const LocalTensorT2 srcLocal, const RoundMode round_mode, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T1, typename T2 __aicore__ inline void Cast(const LocalTensorT1 dstLocal, const LocalTensorT2 srcLocal, const RoundMode round_mode, const uint32_t calCount)"
    },
    {
      "API名称": "Mins-标量双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0057.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Sign",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0552.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void Sign(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void Sign(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)"
    },
    {
      "API名称": "SetDeqScale-量化设置-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0099.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetSysWorkSpacePtr",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0170.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline __gm__ uint8_t __gm__ GetSysWorkSpacePtr()",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline __gm__ uint8_t __gm__ GetSysWorkSpacePtr()"
    },
    {
      "API名称": "Compare-比较指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0066.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ReduceAny-ReduceAny-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10142.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LayerNormGradBeta-LayerNorm-数据归一化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0799.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Conv2D",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0262.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Conv2D(const LocalTensordst_T dstLocal, const LocalTensorsrc_T featureMap, const LocalTensorsrc_T weight, Conv2dParams conv2dParams, Conv2dTilling tilling)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename dst_T, typename src_T __aicore__ inline void Conv2D(const LocalTensordst_T dstLocal, const LocalTensorsrc_T featureMap, const LocalTensorsrc_T weight, Conv2dParams conv2dParams, Conv2dTilling tilling)"
    },
    {
      "API名称": "ReduceAll-ReduceAll-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10145.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetTaskRation",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0188.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline int64_t GetTaskRation()",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline int64_t GetTaskRation()"
    },
    {
      "API名称": "BatchNorm",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0806.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void BatchNorm(const LocalTensorT output, const LocalTensorT outputMean, const LocalTensorT outputVariance, const LocalTensorT inputX, const LocalTensorT gamm, const LocalTensorT beta, const T epsilon, BatchNormTiling tiling)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false, bool isBasicBlock  false __aicore__ inline void BatchNorm(const LocalTensorT output, const LocalTensorT outputMean, const LocalTensorT outputVariance, const LocalTensorT inputX, const LocalTensorT gamm, const LocalTensorT beta, const T epsilon, BatchNormTiling tiling)"
    },
    {
      "API名称": "Sub",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0036.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Sub(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)",
      "参数说明": [
        {
          "参数名": "src0Local",
          "类型": "",
          "说明": "src1Local;"
        }
      ],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Sub(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)"
    },
    {
      "API名称": "AscendAntiQuant",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0822.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持接口框架申请和开发者通过sharedTmpBuffer入参传入两种方式。",
      "函数原型": "__aicore__ inline void AscendAntiQuant(const LocalTensorOutputDataType dst, const LocalTensorInputDataType src, const LocalTensorOutputDataType offset, const LocalTensorOutputDataType scale, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t K, const AntiQuantShapeInfo shapeInfo  )",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename InputDataType, typename OutputDataType, bool isTranspose __aicore__ inline void AscendAntiQuant(const LocalTensorOutputDataType dst, const LocalTensorInputDataType src, const LocalTensorOutputDataType offset, const LocalTensorOutputDataType scale, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t K, const AntiQuantShapeInfo shapeInfo  )"
    },
    {
      "API名称": "ICPU_RUN_KF-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1208.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetSubBlockNum(ISASI)-系统变量访问-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0280.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Add-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0035.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetSysWorkSpace",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0171.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void SetSysWorkSpace(GM_ADDR workspace)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline void SetSysWorkSpace(GM_ADDR workspace)"
    },
    {
      "API名称": "Ln-单目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0026.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetStoreAtomicConfig(ISASI)-原子操作-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0287.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "BlockReduceMax",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0082.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void BlockReduceMax(const LocalTensorT dstLocal, const LocalTensorT srcLocal,const int32_t repeat, const uint64_t mask, const int32_t dstRepStride, const int32_t srcBlkStride, const int32_t srcRepStride)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isSetMask  true __aicore__ inline void BlockReduceMax(const LocalTensorT dstLocal, const LocalTensorT srcLocal,const int32_t repeat, const uint64_t mask, const int32_t dstRepStride, const int32_t srcBlkStride, const int32_t srcRepStride)"
    },
    {
      "API名称": "Extract",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0841.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Extract(const LocalTensorT dstValueLocal, const LocalTensoruint32_t dstIndexLocal, const LocalTensorT sortedLocal, const int32_t repeatTimes)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Extract(const LocalTensorT dstValueLocal, const LocalTensoruint32_t dstIndexLocal, const LocalTensorT sortedLocal, const int32_t repeatTimes)"
    },
    {
      "API名称": "GET_TILING_DATA_WITH_STRUCT",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0215.html",
      "功能说明": "",
      "函数原型": "GET_TILING_DATA_WITH_STRUCT(struct_name, tiling_data, tiling_arg)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "GET_TILING_DATA_WITH_STRUCT(struct_name, tiling_data, tiling_arg)"
    },
    {
      "API名称": "GroupNorm",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0816.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void GroupNorm(const LocalTensorT output, const LocalTensorT outputMean, const LocalTensorT outputVariance, const LocalTensorT inputX, const LocalTensorT gamma, const LocalTensorT beta, const T epsilon, GroupNormTiling tiling)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void GroupNorm(const LocalTensorT output, const LocalTensorT outputMean, const LocalTensorT outputVariance, const LocalTensorT inputX, const LocalTensorT gamma, const LocalTensorT beta, const T epsilon, GroupNormTiling tiling)"
    },
    {
      "API名称": "GetSubBlockIdx(ISASI)-系统变量访问-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0281.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "CrossCoreSetFlag(ISASI)-核间同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0273.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "使用说明-Matmul-Matmul-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0613.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "AscendQuant-量化反量化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0818.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetTPipePtr-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0120.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Asin-Asin-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0496.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "TransData",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10181.html",
      "功能说明": "由于该接口的内部实现中，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void TransData(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const TransDataParamsU, S params)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template const TransDataConfig config, typename T, typename U, typename S __aicore__ inline void TransData(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const TransDataParamsU, S params)"
    },
    {
      "API名称": "NotifyNextBlock-核间同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0208.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Ceil-Ceil-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0572.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "昇腾算子开发场景-昇腾社区",
      "API文档URL": "https://www.hiascend.com/developer/operator",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "TBuf简介-TBuf-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0160.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "DataSyncBarrier(ISASI)-核内同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0272.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Floor-Floor-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0568.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "FasterGelu-Gelu-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0772.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetPadValue(ISASI)-数据搬运-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0266.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "WriteSpmBuffer-SPM Buffer-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0167.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "get-容器函数-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10109.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetUserWorkspace-workspace-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0172.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "PipeBarrier(ISASI)-核内同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0271.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetKernelMode",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1211.html",
      "功能说明": "",
      "函数原型": "void SetKernelMode(KernelMode mode)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "void SetKernelMode(KernelMode mode)"
    },
    {
      "API名称": "GetSystemCycle",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0282.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline int64_t GetSystemCycle()",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline int64_t GetSystemCycle()"
    },
    {
      "API名称": "Digamma",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0597.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void Digamma(LocalTensorT dstTensor, const LocalTensorT srcTensor, LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void Digamma(LocalTensorT dstTensor, const LocalTensorT srcTensor, LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)"
    },
    {
      "API名称": "ShiftRight-标量双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0059.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LoadDataWithTranspose",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0239.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void LoadDataWithTranspose(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LoadData2dTransposeParams loadDataParams)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void LoadDataWithTranspose(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LoadData2dTransposeParams loadDataParams)"
    },
    {
      "API名称": "Tanh-Tanh-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0492.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetFixpipeNz2ndFlag(ISASI)-数据搬运-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0253.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "CumSum-CumSum-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0605.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "make_tuple",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10110.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline constexpr tupleunwrap_decay_tTps... make_tuple(Tps ...args);",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename ...Tps __aicore__ inline constexpr tupleunwrap_decay_tTps... make_tuple(Tps ...args);"
    },
    {
      "API名称": "FusedMulAdd",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0050.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void FusedMulAdd(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void FusedMulAdd(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)"
    },
    {
      "API名称": "GmFree-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1210.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Sort-Sort-排序-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0842.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "简介-ContextBuilder-Tiling数据结构注册-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1007.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Abs-单目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0027.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SwiGLU",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0776.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void SwiGLU(LocalTensorT dstTensor, const LocalTensorT srcTensor0, const LocalTensorT srcTensor1, const float scalarValue, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void SwiGLU(LocalTensorT dstTensor, const LocalTensorT srcTensor0, const LocalTensorT srcTensor1, const float scalarValue, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)"
    },
    {
      "API名称": "昇腾AI原生创新算子挑战赛-昇腾社区",
      "API文档URL": "https://www.hiascend.com/developer/ops",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "WelfordUpdate-数据归一化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0812.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LeakyRelu-标量双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0060.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ScalarGetSFFValue-标量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0020.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "PlatformAscendCManager-平台信息获取-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1039.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "UnPad-数据填充-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0851.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetDataBlockSizeInBytes-系统变量访问-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0186.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetFlagWaitFlag(ISASI)-核内同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0270.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Cos-Cos-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0508.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GET_TILING_DATA_MEMBER",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0216.html",
      "功能说明": "",
      "函数原型": "GET_TILING_DATA_MEMBER(struct_name, mem_name, tiling_data, tiling_arg)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "GET_TILING_DATA_MEMBER(struct_name, mem_name, tiling_data, tiling_arg)"
    },
    {
      "API名称": "ArithProgression",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0856.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void ArithProgression(const LocalTensorT dstLocal, const T firstValue, const T diffValue, const int32_t count)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void ArithProgression(const LocalTensorT dstLocal, const T firstValue, const T diffValue, const int32_t count)"
    },
    {
      "API名称": "MmadWithSparse-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0250.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "DataCopyPad",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0265.html",
      "功能说明": "不同产品型号对函数原型的支持存在差异，请参考下表中的支持度信息，选择产品型号支持的函数原型进行开发。",
      "函数原型": "__aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyExtParams dataCopyParams, const DataCopyPadExtParamsT padParams)",
      "参数说明": [
        {
          "参数名": "支持的操作数步长等参数取值范围更大通路",
          "类型": "",
          "说明": "Global Memory-Local Memory1 2template typename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyExtParams dataCopyParams, const DataCopyPadExtParamsT padParams) 通路：Local Memory-Global Memory1 2template typename T __aicore__ inline void DataCopyPad(const GlobalTensorT dstGlobal, const LocalTensorT srcLocal, const DataCopyExtParams dataCopyParams) 通路：Local Memory-Local Memory，实际搬运过程是VECINVECOUT-GM-TSCM1 2template typename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const DataCopyExtParams dataCopyParams, const Nd2NzParams nd2nzParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Global Memory-Local Memory1 2template typename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyExtParams dataCopyParams, const DataCopyPadExtParamsT padParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Local Memory-Global Memory1 2template typename T __aicore__ inline void DataCopyPad(const GlobalTensorT dstGlobal, const LocalTensorT srcLocal, const DataCopyExtParams dataCopyParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Local Memory-Local Memory，实际搬运过程是VECINVECOUT-GM-TSCM1 2template typename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const DataCopyExtParams dataCopyParams, const Nd2NzParams nd2nzParams)"
        },
        {
          "参数名": "dataCopyParams为DataCopyParams类型通路",
          "类型": "",
          "说明": "Global Memory-Local Memory1 2templatetypename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyParams dataCopyParams, const DataCopyPadParams padParams) 通路：Local Memory-Global Memory1 2templatetypename T __aicore__ inline void DataCopyPad(const GlobalTensorT dstGlobal, const LocalTensorT srcLocal,const DataCopyParams dataCopyParams) 通路：Local Memory-Local Memory，实际搬运过程是VECINVECOUT-GM-TSCM1 2templatetypename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const DataCopyParams dataCopyParams, const Nd2NzParams nd2nzParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Global Memory-Local Memory1 2templatetypename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyParams dataCopyParams, const DataCopyPadParams padParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Local Memory-Global Memory1 2templatetypename T __aicore__ inline void DataCopyPad(const GlobalTensorT dstGlobal, const LocalTensorT srcLocal,const DataCopyParams dataCopyParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Local Memory-Local Memory，实际搬运过程是VECINVECOUT-GM-TSCM1 2templatetypename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const DataCopyParams dataCopyParams, const Nd2NzParams nd2nzParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Global Memory-Local Memory1 2template typename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyExtParams dataCopyParams, const DataCopyPadExtParamsT padParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Local Memory-Global Memory1 2template typename T __aicore__ inline void DataCopyPad(const GlobalTensorT dstGlobal, const LocalTensorT srcLocal, const DataCopyExtParams dataCopyParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Local Memory-Local Memory，实际搬运过程是VECINVECOUT-GM-TSCM1 2template typename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const DataCopyExtParams dataCopyParams, const Nd2NzParams nd2nzParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Global Memory-Local Memory1 2templatetypename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyParams dataCopyParams, const DataCopyPadParams padParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Local Memory-Global Memory1 2templatetypename T __aicore__ inline void DataCopyPad(const GlobalTensorT dstGlobal, const LocalTensorT srcLocal,const DataCopyParams dataCopyParams)"
        },
        {
          "参数名": "通路",
          "类型": "",
          "说明": "Local Memory-Local Memory，实际搬运过程是VECINVECOUT-GM-TSCM1 2templatetypename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const DataCopyParams dataCopyParams, const Nd2NzParams nd2nzParams)"
        }
      ],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void DataCopyPad(const LocalTensorT dstLocal, const GlobalTensorT srcGlobal, const DataCopyExtParams dataCopyParams, const DataCopyPadExtParamsT padParams)"
    },
    {
      "API名称": "Asinh",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0560.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void Asinh(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void Asinh(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t calCount)"
    },
    {
      "API名称": "AdjustSoftMaxRes-SoftMax-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0760.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Lgamma-Lgamma-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0593.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Duplicate",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0088.html",
      "功能说明": "",
      "函数原型": "void Duplicate(const LocalTensorT dstLocal, const T scalarValue, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T void Duplicate(const LocalTensorT dstLocal, const T scalarValue, const int32_t calCount)"
    },
    {
      "API名称": "SetAtomicMin(ISASI)-原子操作-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0285.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Max-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0039.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ASCENDC_TPL_SEL_PARAM-Tiling数据结构注册-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_00057.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Acos-Acos-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0504.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "MrgSort-排序组合(ISASI)-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0232.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Sum-Sum-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0826.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ClampMin",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0577.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void ClampMin(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const T scalar, const uint32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void ClampMin(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const T scalar, const uint32_t calCount)"
    },
    {
      "API名称": "GetProgramCounter(ISASI)-系统变量访问-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0279.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "OpAttrDef-OpAttrDef-原型注册与管理-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0976.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Brcb-数据填充-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0089.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Log-Log-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0512.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GmAlloc-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1207.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "简介-PlatformAscendC-平台信息获取-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1026.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "TRACE_STOP-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1213.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LogSoftMax-LogSoftMax-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0768.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ProposalConcat-排序组合(ISASI)-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0227.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetReduceMaxMinCount(ISASI)-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0226.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "使用说明-Conv3DBackpropFilter-Conv3DBackpropFilter-卷积反向-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0893.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Broadcast",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0853.html",
      "功能说明": "该接口需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void Broadcast(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const uint32_t dstShapedim, const uint32_t srcShapedim, LocalTensoruint8_t sharedTmpBuffer)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, int32_t dim, int32_t axis, bool isReuseSource  false __aicore__ inline void Broadcast(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const uint32_t dstShapedim, const uint32_t srcShapedim, LocalTensoruint8_t sharedTmpBuffer)"
    },
    {
      "API名称": "InitSpmBuffer",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0166.html",
      "功能说明": "Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 ，不支持暂存到L1 Buffer初始化接口。",
      "函数原型": "__aicore__ inline void InitSpmBuffer(const GlobalTensorT workspace, const int32_t bufferSize)",
      "参数说明": [
        {
          "参数名": "Buffer",
          "类型": "",
          "说明": "1 2 template typename T __aicore__ inline void InitSpmBuffer(const GlobalTensorT workspace, const int32_t bufferSize)"
        },
        {
          "参数名": "Buffer大小",
          "类型": "",
          "说明": "1 __aicore__ inline void InitSpmBuffer(const int32_t bufferSize) Atlas A2 训练系列产品Atlas 800I A2 推理产品A200I A2 Box 异构组件 ，不支持暂存到L1 Buffer初始化接口。 Atlas A3 训练系列产品Atlas A3 推理系列产品 ，不支持暂存到L1 Buffer初始化接口。"
        }
      ],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void InitSpmBuffer(const GlobalTensorT workspace, const int32_t bufferSize)"
    },
    {
      "API名称": "Relu-单目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0032.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Sqrt-单目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0029.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetBlockIdx",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0185.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline int64_t GetBlockIdx()",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline int64_t GetBlockIdx()"
    },
    {
      "API名称": "SimpleSoftMax-SoftMax-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0755.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetArchVersion-系统变量访问-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0187.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Round-Round-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0581.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Sort32-排序组合(ISASI)-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0231.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "FasterGeluV2-Gelu-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0773.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetAtomicNone-原子操作-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0212.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Transpose",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0199.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Transpose(const LocalTensorT dstLocal, const LocalTensorT srcLocal)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Transpose(const LocalTensorT dstLocal, const LocalTensorT srcLocal)"
    },
    {
      "API名称": "ReduceMean-ReduceMean-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10157.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "MulCast-双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0049.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Axpy-标量三目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0063.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetLoadDataPaddingValue-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0248.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SyncAll-核间同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0204.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Sin-Sin-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0500.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "简介-TQueBind-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0146.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "REGISTER_TILING_FOR_TILINGKEY",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_00004.html",
      "功能说明": "",
      "函数原型": "REGISTER_TILING_FOR_TILINGKEY(EXPRESSION, TILING_STRUCT)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "REGISTER_TILING_FOR_TILINGKEY(EXPRESSION, TILING_STRUCT)"
    },
    {
      "API名称": "Select-选择指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0070.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Mean-Mean-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0829.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Muls-标量双目指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0055.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "BlockReduceSum",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0084.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void BlockReduceSum (const LocalTensorT dstLocal, const LocalTensorT srcLocal,const int32_t repeat, const uint64_t mask, const int32_t dstRepStride, const int32_t srcBlkStride, const int32_t srcRepStride)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isSetMask  true __aicore__ inline void BlockReduceSum (const LocalTensorT dstLocal, const LocalTensorT srcLocal,const int32_t repeat, const uint64_t mask, const int32_t dstRepStride, const int32_t srcBlkStride, const int32_t srcRepStride)"
    },
    {
      "API名称": "使用说明-GroupBarrier-资源管理(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0301.html",
      "功能说明": "当同一个CubeResGroupHandle中的两个AIV任务之间存在依赖关系时，可以使用GroupBarrier控制同步。假设一组AIV A做完任务x以后，另外一组AIV B才可以开始后续业务，称AIV A组为Arrive组，AIV B组为Wait组。 基于GroupBarrier的组同步使用步骤如下： 创建GroupBarrier。被等待的AIV调用Arrive，需要等待的AIV调用Wait。 下文仅提供示例代码片段，更多完整样例请参考GroupBarrier样例。 创建GroupBarrier。1 2 3constexpr int32_t ARRIVE_NUM  2;  Arrive组的AIV个数 constexpr int32_t WAIT_NUM  6;  Wait组的AIV个数 AscendC::GroupBarrierAscendC::PipeMode::MTE3_MODE barA(workspace, ARRIVE_NUM, WAIT_NUM);  创建GroupBarrier，用户自行管理并对这部分workspace清零 被等待的AIV调用调用Arrive，需要等待的AIV调用Wait。1 2 3 4 5 6 7 8auto id  AscendC::GetBlockIdx(); if (id  0  id  ARRIVE_NUM)  各种Vector计算逻辑，用户自行实现 barA.Arrive(id);  else(id  ARRIVE_NUM  id  ARRIVE_NUM  WAIT_NUM) barA.Wait(id - ARRIVE_NUM);  各种Vector计算逻辑，用户自行实现 ",
      "函数原型": "AscendC::GroupBarrierAscendC::PipeMode::MTE3_MODE barA(workspace, ARRIVE_NUM, WAIT_NUM);  创建GroupBarrier，用户自行管理并对这部分workspace清零",
      "参数说明": [
        {
          "参数名": "AscendC",
          "类型": "",
          "说明": ":GroupBarrierAscendC::PipeMode::MTE3_MODE barA(workspace, ARRIVE_NUM, WAIT_NUM);  创建GroupBarrier，用户自行管理并对这部分workspace清零"
        },
        {
          "参数名": "AscendC",
          "类型": "",
          "说明": ":GetBlockIdx(); if (id  0  id  ARRIVE_NUM)  各种Vector计算逻辑，用户自行实现 barA.Arrive(id);  else(id  ARRIVE_NUM  id  ARRIVE_NUM  WAIT_NUM) barA.Wait(id - ARRIVE_NUM);  各种Vector计算逻辑，用户自行实现 "
        }
      ],
      "返回值": "无",
      "调用示例": "1 2 3"
    },
    {
      "API名称": "MetricsProfStart",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1214.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void MetricsProfStart()",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline void MetricsProfStart()"
    },
    {
      "API名称": "DEVICE_IMPL_OP_OPTILING-Tiling数据结构注册-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_00060.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ToFloat-标量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0022.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "printf-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0193.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "is_base_of-type_traits-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10115.html",
      "功能说明": "is_base_of是定义于type_traits头文件的一个类型特征工具，它能够在程序编译时检查一个类型是否为另一个类型的基类。本接口可应用在模板元编程类型检查和条件编译等场景，用于在编译阶段捕获潜在的类型错误，提高代码的鲁棒性。",
      "函数原型": "AscendC::PRINTF(Is Base a base of Derived dn , AscendC::Std::is_base_ofBase, Derived::value);",
      "参数说明": [
        {
          "参数名": "Base",
          "类型": "待检查的基类类型，即Base类型是否为Derived类型的基类。",
          "说明": ""
        },
        {
          "参数名": "Derived",
          "类型": "待检查的派生类类型，即Base类型是否为Derived类型的基类。",
          "说明": ""
        }
      ],
      "返回值": "is_base_of的静态常量成员value用于获取返回的布尔值，is_base_ofBase, Derived::value取值如下： true：Base类型是Derived类型的基类包括Base类型和Derived类型为同一类型的情况。false：Base类型不是Derived类型的基类。",
      "调用示例": "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41"
    },
    {
      "API名称": "SetCmpMask(ISASI)-比较指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0224.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Fixpipe-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0251.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Compare",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0067.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Compare(const LocalTensorT src0Local, const LocalTensorT src1Local, CMPMODE cmpMode, const uint64_t mask, const BinaryRepeatParams repeatParams)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isSetMask  true __aicore__ inline void Compare(const LocalTensorT src0Local, const LocalTensorT src1Local, CMPMODE cmpMode, const uint64_t mask, const BinaryRepeatParams repeatParams)"
    },
    {
      "API名称": "conditional-type_traits-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10118.html",
      "功能说明": "conditional是定义在type_traits头文件里的一个类型特征工具，它在程序编译时根据一个布尔条件从两个类型中选择一个类型。本接口可应用在模板元编程中，用于根据不同的条件来灵活选择合适的类型，增强代码的通用性和灵活性。 conditional有一个嵌套的type成员，它的值取决于Bp的值：如果Bp为true，则conditionalBp, If, Then::type为If。如果Bp为false，则conditionalBp, If, Then::type为Then。",
      "函数原型": "__aicore__ inline static void print() ",
      "参数说明": [
        {
          "参数名": "Bp",
          "类型": "一个布尔常量表达式，作为选择类型的条件。",
          "说明": ""
        },
        {
          "参数名": "If",
          "类型": "当Bp为true时选择的类型。",
          "说明": ""
        },
        {
          "参数名": "Then",
          "类型": "当Bp为false时选择的类型。",
          "说明": ""
        }
      ],
      "返回值": "conditional的静态常量成员type用于获取返回值，conditionalBp, If, Then::type取值如下： If：Bp为true。Then：Bp为false。",
      "调用示例": "1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40"
    },
    {
      "API名称": "min",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10054.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline T min(const T src0, const U src1)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, typename U __aicore__ inline T min(const T src0, const U src1)"
    },
    {
      "API名称": "Normalize-数据归一化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0810.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Trap-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0196.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Pad-数据填充-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0849.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ICPU_SET_TILING_KEY-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1209.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "TransDataTo5HD",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0200.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void TransDataTo5HD(const LocalTensorT (dstLocalList)NCHW_CONV_ADDR_LIST_SIZE, const LocalTensorT (srcLocalList)NCHW_CONV_ADDR_LIST_SIZE, const TransDataTo5HDParams nchwconvParams)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": " NCHW_CONV_ADDR_LIST_SIZE值为16 template typename T __aicore__ inline void TransDataTo5HD(const LocalTensorT (dstLocalList)NCHW_CONV_ADDR_LIST_SIZE, const LocalTensorT (srcLocalList)NCHW_CONV_ADDR_LIST_SIZE, const TransDataTo5HDParams nchwconvParams)"
    },
    {
      "API名称": "Gelu-Gelu-激活函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0771.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "DumpAccChkPoint-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0195.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "使用说明-Conv3DBackpropInput-Conv3DBackpropInput-卷积反向-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0918.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "SetLoadDataBoundary-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0246.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "TRACE_START-算子调测API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_1212.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Cosh-Cosh-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0528.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "WholeReduceSum",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0081.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void WholeReduceSum(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const uint64_t mask, const int32_t repeatTimes, const int32_t dstRepStride, const int32_t srcBlkStride, const int32_t srcRepStride)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isSetMask  true __aicore__ inline void WholeReduceSum(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const uint64_t mask, const int32_t repeatTimes, const int32_t dstRepStride, const int32_t srcBlkStride, const int32_t srcRepStride)"
    },
    {
      "API名称": "简介-TBufPool-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0121.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ScalarGetCountOfValue",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0016.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline int64_t ScalarGetCountOfValue(uint64_t valueIn)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template int countValue __aicore__ inline int64_t ScalarGetCountOfValue(uint64_t valueIn)"
    },
    {
      "API名称": "GatherMask",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0071.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void GatherMask(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorU src1Pattern, const bool reduceMode, const uint32_t mask, const GatherMaskParams gatherMaskParams, uint64_t rsvdCnt)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, typename U, GatherMaskMode mode  defaultGatherMaskMode __aicore__ inline void GatherMask(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorU src1Pattern, const bool reduceMode, const uint32_t mask, const GatherMaskParams gatherMaskParams, uint64_t rsvdCnt)"
    },
    {
      "API名称": "ReduceMin",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10056.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void ReduceMin(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t srcShape, bool srcInnerPad)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template class T, class pattern, bool isReuseSource  false __aicore__ inline void ReduceMin(const LocalTensorT dstTensor, const LocalTensorT srcTensor, const LocalTensoruint8_t sharedTmpBuffer, const uint32_t srcShape, bool srcInnerPad)"
    },
    {
      "API名称": "ReduceSum-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0078.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Frac",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0540.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持开发者通过sharedTmpBuffer入参传入和接口框架申请两种方式。",
      "函数原型": "__aicore__ inline void Frac(const LocalTensorT dstTensor, const LocalTensorT srcTensor)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isReuseSource  false __aicore__ inline void Frac(const LocalTensorT dstTensor, const LocalTensorT srcTensor)"
    },
    {
      "API名称": "同步异步API说明-AscendCL APICC-AscendCL应用开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/appdevgapi/aclcppdevg_03_0020.html",
      "功能说明": "CANN支持以下几类显式同步，调用此类接口后，主机线程会阻塞直到相关的任务执行完成。 设备同步：例如aclrtSynchronizeDevice阻塞当前主机线程直到Device上所有显式或隐式创建的Stream都完成所有先前下发的任务。应该尽量少使用该函数，以免拖延主机运行。 流同步：例如aclrtSynchronizeStream阻塞当前主机线程直到指定的Stream中完成所有下发的任务。 事件同步：例如aclrtSynchronizeEvent阻塞当前主机线程直到指定的Event事件完成。属于更细粒度的同步。 对于异步接口，主机线程调用异步接口后仅代表下发任务，在任务未完成前，异步接口已向主机线程返回成功。用户需要调用上面的显式同步接口阻塞主机线程，等待任务完成，否则可能会导致训练或推理等业务异常Device断链掉卡等未知情况。",
      "函数原型": "",
      "参数说明": [
        {
          "参数名": "设备同步",
          "类型": "",
          "说明": "例如aclrtSynchronizeDevice阻塞当前主机线程直到Device上所有显式或隐式创建的Stream都完成所有先前下发的任务。应该尽量少使用该函数，以免拖延主机运行。"
        },
        {
          "参数名": "流同步",
          "类型": "",
          "说明": "例如aclrtSynchronizeStream阻塞当前主机线程直到指定的Stream中完成所有下发的任务。"
        },
        {
          "参数名": "事件同步",
          "类型": "",
          "说明": "例如aclrtSynchronizeEvent阻塞当前主机线程直到指定的Event事件完成。属于更细粒度的同步。"
        }
      ],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "CompareScalar-比较指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0068.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ParamType-OpParamDef-原型注册与管理-Host API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0957.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ProposalExtract",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0228.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void ProposalExtract(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const int32_t repeatTimes, const int32_t modeNumber)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void ProposalExtract(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const int32_t repeatTimes, const int32_t modeNumber)"
    },
    {
      "API名称": "DeepNorm-数据归一化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0808.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "MrgSort",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0847.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void MrgSort(const LocalTensorT dstLocal, const MrgSortSrcListT sortList, const uint16_t elementCountList4, uint32_t sortedNum4, uint16_t validBit, const int32_t repeatTimes)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, bool isExhaustedSuspension  false __aicore__ inline void MrgSort(const LocalTensorT dstLocal, const MrgSortSrcListT sortList, const uint16_t elementCountList4, uint32_t sortedNum4, uint16_t validBit, const int32_t repeatTimes)"
    },
    {
      "API名称": "SetMaskCount-掩码操作-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0094.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "LayerNorm-LayerNorm-数据归一化-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0797.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ReduceSum-ReduceSum-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10018.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Acosh-Acosh-数学库-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0564.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "is_convertible-type_traits-模板库函数-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_10114.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "MulAddDst",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0048.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void MulAddDst(const LocalTensorT dstLocal, const LocalTensorU src0Local, const LocalTensorU src1Local, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T, typename U __aicore__ inline void MulAddDst(const LocalTensorT dstLocal, const LocalTensorU src0Local, const LocalTensorU src1Local, const int32_t calCount)"
    },
    {
      "API名称": "ICachePreLoad",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0276.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void ICachePreLoad(const int64_t preFetchLen)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "__aicore__ inline void ICachePreLoad(const int64_t preFetchLen)"
    },
    {
      "API名称": "REGISTER_TILING_DEFAULT-Kernel Tiling-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_00003.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "CheckLocalMemoryIA-矩阵计算(ISASI)-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0261.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "ReduceXorSum-ReduceXorSum-归约操作-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0833.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "CastDeq-精度转换指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0074.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "CrossCoreWaitFlag(ISASI)-核间同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0274.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "同步控制简介-TQueSync-核内同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0178.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "AscendDequant",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0820.html",
      "功能说明": "由于该接口的内部实现中涉及复杂的数学计算，需要额外的临时空间来存储计算过程中的中间变量。临时空间支持接口框架申请和开发者通过sharedTmpBuffer入参传入两种方式。",
      "函数原型": "__aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const LocalTensorscaleT deqScale, const LocalTensoruint8_t sharedTmpBuffer, DequantParams params)",
      "参数说明": [
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const LocalTensorscaleT deqScale, const LocalTensoruint8_t sharedTmpBuffer, DequantParams params) 接口框架申请临时空间 1 2 template typename dstT, typename scaleT, DeQuantMode mode  DeQuantMode::DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const LocalTensorscaleT deqScale, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const LocalTensorscaleT deqScale, const LocalTensoruint8_t sharedTmpBuffer, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const LocalTensorscaleT deqScale, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const scaleT deqScale, const LocalTensoruint8_t sharedTmpBuffer, DequantParams params) 接口框架申请临时空间 1 2 template typename dstT, typename scaleT, DeQuantMode mode  DeQuantMode::DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const scaleT deqScale, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const scaleT deqScale, const LocalTensoruint8_t sharedTmpBuffer, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const scaleT deqScale, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const LocalTensorscaleT deqScale, const LocalTensoruint8_t sharedTmpBuffer, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const LocalTensorscaleT deqScale, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const scaleT deqScale, const LocalTensoruint8_t sharedTmpBuffer, DequantParams params)"
        },
        {
          "参数名": "DeQuantMode",
          "类型": "",
          "说明": ":DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const scaleT deqScale, DequantParams params)"
        }
      ],
      "返回值": "无",
      "调用示例": "template typename dstT, typename scaleT, DeQuantMode mode  DeQuantMode::DEQUANT_WITH_SINGLE_ROW __aicore__ inline void AscendDequant(const LocalTensordstT dstTensor, const LocalTensorint32_t srcTensor, const LocalTensorscaleT deqScale, const LocalTensoruint8_t sharedTmpBuffer, DequantParams params)"
    },
    {
      "API名称": "DataCacheCleanAndInvalid-缓存处理-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0177.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Concat-Sort-排序-高阶API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0839.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "DataCachePreload-缓存处理-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0176.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "Min",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0040.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Min(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Min(const LocalTensorT dstLocal, const LocalTensorT src0Local, const LocalTensorT src1Local, const int32_t calCount)"
    },
    {
      "API名称": "Scatter",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0235.html",
      "功能说明": "",
      "函数原型": "__aicore__ inline void Scatter(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LocalTensoruint32_t dstOffsetLocal, const uint32_t dstBaseAddr, const uint32_t count)",
      "参数说明": [],
      "返回值": "无",
      "调用示例": "template typename T __aicore__ inline void Scatter(const LocalTensorT dstLocal, const LocalTensorT srcLocal, const LocalTensoruint32_t dstOffsetLocal, const uint32_t dstBaseAddr, const uint32_t count)"
    },
    {
      "API名称": "RepeatReduceSum-归约指令-矢量计算-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0086.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "GetICachePreloadStatus(ISASI)-缓存处理-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0277.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    },
    {
      "API名称": "IBWait-核间同步-内存管理与同步控制-基础API-Ascend C算子开发接口-CANN商用版8.2.RC1开发文档-昇腾社区",
      "API文档URL": "https://www.hiascend.com/document/detail/zh/canncommercial/82RC1/API/ascendcopapi/atlasascendc_api_07_0203.html",
      "功能说明": "",
      "函数原型": "",
      "参数说明": [],
      "返回值": "无",
      "调用示例": ""
    }
  ],
  "错误信息": {}
}